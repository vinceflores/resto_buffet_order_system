// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./app.db"
}

model User {
  id      String @id @default(uuid())
  clerkId String @unique
  email   String
}

model Restaurant {
  id          String    @id @default(uuid())
  name        String 
  description String // where operating hours can be added
  maxTables      Int

  // Basic business information
  phone       String?
  email       String?
  website     String?
  imageUrl    String?

  // Business details
  cuisine     String?      // e.g., "Italian", "Japanese", "American"
  priceRange  String?      // e.g., "$", "$$", "$$$", "$$$$"
  capacity    Int?         // Total restaurant capacity
  isActive    Boolean     @default(true)
  
  // Ratings and reviews
  rating      Float?      // Average rating
  reviewCount Int        @default(0)
  
  // Timestamps
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt

  // Existing relations
  location    Address[]
  tables      Table[]
  Menu        Menu[]
}

model Address {
  id           String     @id @default(uuid())
  restaurantId String
  restaurant   Restaurant @relation(fields: [restaurantId], references: [id])

  street           String
  city             String
  state            String
  zipCode          String
  country          String
  placeId          String? @unique // Google Maps Place ID
  formattedAddress String // Full formatted address from Google
  latitude         Float?
  longitude        Float?
  locationType     String? // ROOFTOP, RANGE_INTERPOLATED, GEOMETRIC_CENTER, APPROXIMATE
  plusCode         String? // Open Location Code
  businessStatus   String? // OPERATIONAL, CLOSED_TEMPORARILY, CLOSED_PERMANENTLY
  utcOffset        Int? // UTC offset in minutes
  timezone         String? // Timezone ID
  isVerified       Boolean @default(false)

  toString String
}

model Menu {
  id           String     @id @default(uuid())
  restaurantId String
  restaurant   Restaurant @relation(fields: [restaurantId], references: [id])

  items Item[]
}

model Table {
  id String @id @default(uuid())

  seats      Int      @default(1)
  seated     Int
  total      Float
  isReserved DateTime

  restaurantId String
  restaurant   Restaurant @relation(fields: [restaurantId], references: [id])

  orders Order[]
}

model Order {
  id String @id @default(uuid())

  tableId String
  table   Table       @relation(fields: [tableId], references: [id])
  items   OrderItem[]

  status String @default("SUBMITTED")
  total  Float

  createdAt DateTime @default(now())
  updatedAt DateTime
}

model OrderItem {
  id       String @id @default(uuid())
  quantity Int

  itemId String
  item   Item   @relation(fields: [itemId], references: [id])

  order Order[]

  @@unique([id, itemId])
}

model Item {
  id String @id @default(uuid())

  name        String
  description String?
  price       Float
  category    String?
  isAvailable Boolean @default(true)
  imageUrl    String?

  menuId String
  menu   Menu   @relation(fields: [menuId], references: [id])

  order_items OrderItem[]
}
